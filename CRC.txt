#include <iostream>
using namespace std;

int main() {
  int i, j, k, l;

  int fr;
  cout << "\n Enter size of data :";
  cin >> fr;

  int f[10];

  cout << "\n Enter data :";
  for (i = 0; i < fr; i++) 
  {
    cin >> f[i];
  }

  int ge;
  cout << "\n Enter key size :";
  cin >> ge;

  int g[10];
  cout << "\n Enter CRC key :";
  for (i = 0; i < ge; i++)
  {
    cin >> g[i];
  }

  cout << "\n *****Sender Side*****";
  cout << "\n Dataword (dividend) :";
  for (i = 0; i < fr; i++) 
  {
    cout << f[i];
  }

  cout << "\n Generator key (divisor) :";
  for (i = 0; i < ge; i++) 
  {
    cout << g[i];
  }

  int rs = ge - 1;
  cout << "\n Number of 0's to be appended : " << rs;
  for (i = fr; i < fr + rs; i++) 
  {
    f[i] = 0;
  }

  int temp[20];
  for (i = 0; i < 20; i++) 
  {
    temp[i] = f[i];
  }

  cout << "\n After appending 0's :";
  for (i = 0; i < fr + rs; i++) 
  {
    cout << temp[i];
  }

  for (i = 0; i < fr; i++) 
  {
    j = 0;
    k = i;
    
    if (temp[k] >= g[j]) {
      for (j = 0, k = i; j < ge; j++, k++) 
      {
        if ((temp[k] == 1 && g[j] == 1) || (temp[k] == 0 && g[j] == 0)) 
        {
          temp[k] = 0;
        } 
        else 
        {
          temp[k] = 1;
        }
      }
    }
  }


  int crc[20];
  for (i = 0, j = fr; i < rs; i++, j++) 
  {
    crc[i] = temp[j];
  }

  cout << "\n CRC bits: ";
  for (i = 0; i < rs; i++) 
  {
    cout << crc[i];
  }

  cout << "\n Transmitted Frame: ";
  int tf[20];
  for (i = 0; i < fr; i++) 
  {
    tf[i] = f[i];
  }
  for (i = fr, j = 0; i < fr + rs; i++, j++) 
  {
    tf[i] = crc[j];
  }
  for (i = 0; i < fr + rs; i++) 
  {
    cout << tf[i];
  }

  cout << "\n\n *****Receiver side*****  ";
  cout << "\n Received Frame: ";
  for (i = 0; i < fr + rs; i++) 
  {
    cout << tf[i];
  }

  for (i = 0; i < fr + rs; i++) 
  {
    temp[i] = tf[i];
  }

  for (i = 0; i < fr + rs; i++) 
  {
    j = 0;
    k = i;
    if (temp[k] >= g[j]) {
      for (j = 0, k = i; j < ge; j++, k++) 
      {
        if ((temp[k] == 1 && g[j] == 1) || (temp[k] == 0 && g[j] == 0)) 
        {
          temp[k] = 0;
        } 
        else 
        {
          temp[k] = 1;
        }
      }
    }
  }

  cout << "\n Reaminder: ";
  int rem[20];
  for (i = fr, j = 0; i < fr + rs; i++, j++) 
  {
    rem[j] = temp[i];
  }
  for (i = 0; i < rs; i++) 
  {
    cout << rem[i];
  }

  int flag = 0;
  for (i = 0; i < rs; i++) 
  {
    if (rem[i] != 0) 
    {
      flag = 1;
    }
  }

  if (flag == 0) 
  {
    cout << "\n As Remainder is 0 Hence Message Transmitted From Sender To Receriver Is Correct";
  } 
  else 
  {
    cout << "\nAs Remainder is Not 0 Hence Message Transmitted From Sender to Receriver Contains Error";
  }
  return 0;

}

